"use strict";
(self["webpackChunkbusiness_website"] = self["webpackChunkbusiness_website"] || []).push([["Button-stories-tsx"],{

/***/ "./stories/Button.stories.tsx":
/*!************************************!*\
  !*** ./stories/Button.stories.tsx ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Accent: () => (/* binding */ Accent),
/* harmony export */   Disabled: () => (/* binding */ Disabled),
/* harmony export */   FullWidth: () => (/* binding */ FullWidth),
/* harmony export */   Large: () => (/* binding */ Large),
/* harmony export */   Loading: () => (/* binding */ Loading),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Secondary: () => (/* binding */ Secondary),
/* harmony export */   Small: () => (/* binding */ Small),
/* harmony export */   WithIcon: () => (/* binding */ WithIcon),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/next/dist/compiled/react/jsx-dev-runtime.js");
/* harmony import */ var _components_ui_Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/ui/Button */ "./components/ui/Button.tsx");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");



const meta = {
  title: "UI/Button",
  component: _components_ui_Button__WEBPACK_IMPORTED_MODULE_1__.ButtonPrimary,
  parameters: {
    layout: "centered"
  },
  tags: ["autodocs"],
  argTypes: {
    size: {
      control: "select",
      options: ["sm", "md", "lg"],
      description: "The size of the button"
    },
    fullWidth: {
      control: "boolean",
      description: "Whether the button should take up the full width of its container"
    },
    disabled: {
      control: "boolean",
      description: "Whether the button is disabled"
    },
    isLoading: {
      control: "boolean",
      description: "Whether to show a loading spinner"
    },
    children: {
      control: "text",
      description: "The content of the button"
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const Primary = {
  args: {
    children: "Primary Button",
    size: "md",
    disabled: false,
    isLoading: false,
    fullWidth: false
  }
};
const Secondary = {
  args: {
    ...Primary.args,
    children: "Secondary Button"
  },
  render: args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Button__WEBPACK_IMPORTED_MODULE_1__.ButtonSecondary, {
    ...args
  }, void 0, false, {
    fileName: "/Users/kylelarsen/Documents/Notation Website/stories/Button.stories.tsx",
    lineNumber: 54,
    columnNumber: 21
  }, undefined)
};
const Accent = {
  args: {
    ...Primary.args,
    children: "Accent Button"
  },
  render: args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Button__WEBPACK_IMPORTED_MODULE_1__.ButtonAccent, {
    ...args
  }, void 0, false, {
    fileName: "/Users/kylelarsen/Documents/Notation Website/stories/Button.stories.tsx",
    lineNumber: 62,
    columnNumber: 21
  }, undefined)
};
const Small = {
  args: {
    ...Primary.args,
    size: "sm"
  }
};
const Large = {
  args: {
    ...Primary.args,
    size: "lg"
  }
};
const Loading = {
  args: {
    ...Primary.args,
    isLoading: true
  }
};
const Disabled = {
  args: {
    ...Primary.args,
    disabled: true
  }
};
const FullWidth = {
  args: {
    ...Primary.args,
    fullWidth: true
  }
};
const WithIcon = {
  args: {
    ...Primary.args,
    icon: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      className: "h-5 w-5",
      viewBox: "0 0 20 20",
      fill: "currentColor",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z",
        clipRule: "evenodd"
      }, void 0, false, {
        fileName: "/Users/kylelarsen/Documents/Notation Website/stories/Button.stories.tsx",
        lineNumber: 105,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: "/Users/kylelarsen/Documents/Notation Website/stories/Button.stories.tsx",
      lineNumber: 104,
      columnNumber: 7
    }, undefined)
  }
};
;
const __namedExportsOrder = ["Primary", "Secondary", "Accent", "Small", "Large", "Loading", "Disabled", "FullWidth", "WithIcon"];
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    children: 'Primary Button',\n    size: 'md',\n    disabled: false,\n    isLoading: false,\n    fullWidth: false\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Primary.args,\n    children: 'Secondary Button'\n  },\n  render: args => <ButtonSecondary {...args} />\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Accent.parameters = {
  ...Accent.parameters,
  docs: {
    ...Accent.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Primary.args,\n    children: 'Accent Button'\n  },\n  render: args => <ButtonAccent {...args} />\n}",
      ...Accent.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Primary.args,\n    size: 'sm'\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Primary.args,\n    size: 'lg'\n  }\n}",
      ...Large.parameters?.docs?.source
    }
  }
};
Loading.parameters = {
  ...Loading.parameters,
  docs: {
    ...Loading.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Primary.args,\n    isLoading: true\n  }\n}",
      ...Loading.parameters?.docs?.source
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...Disabled.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Primary.args,\n    disabled: true\n  }\n}",
      ...Disabled.parameters?.docs?.source
    }
  }
};
FullWidth.parameters = {
  ...FullWidth.parameters,
  docs: {
    ...FullWidth.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Primary.args,\n    fullWidth: true\n  }\n}",
      ...FullWidth.parameters?.docs?.source
    }
  }
};
WithIcon.parameters = {
  ...WithIcon.parameters,
  docs: {
    ...WithIcon.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Primary.args,\n    icon: <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clipRule=\"evenodd\" />\n      </svg>\n  }\n}",
      ...WithIcon.parameters?.docs?.source
    }
  }
};

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

}]);
//# sourceMappingURL=Button-stories-tsx.iframe.bundle.js.map