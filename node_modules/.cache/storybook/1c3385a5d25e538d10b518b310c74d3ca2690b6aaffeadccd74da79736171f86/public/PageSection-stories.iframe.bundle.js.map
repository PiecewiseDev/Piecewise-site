{"version":3,"file":"PageSection-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;;;AACA;AAAA;;;;;;AAFA;;;;;;;;;;;;;;;AATA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClHA;;AAEA;AACA;AAcA;;;;;;;;;;;;;;;;;;;AAmBA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AACA;;;;;;;;;;;AAKA;AACA;AACA;;;;;AAEA;AACA;AApDA;AAoDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;;AAEA;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AAaA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAGA;AACA;AACA;AAAA;AACA;;;;;;;;;;;AAMA;AACA;AACA;;;;;;AAKA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;AAGA;AAEA;AACA;AACA;AAAA;AACA;;;;;;;;;;AAGA;AA/DA;AA+DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AAEA;AAQA;;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AAIA;;;;;;AAGA;AA/CA;AAAA;AAiDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;;AAEA;AACA;AAWA;;;;;;;;;AASA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;AAMA;AAtCA;AAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;;;;;;;;;AASA;AAGA;AACA;AACA","sources":["webpack://business-website/./stories/PageSection.stories.tsx","webpack://business-website/./components/layout/PageSection.tsx","webpack://business-website/./components/ui/FeatureCard.tsx","webpack://business-website/./components/ui/RevealOnScroll.tsx","webpack://business-website/./components/ui/StyledLink.tsx","webpack://business-website/./components/ui/index.ts"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\nimport PageSection from '@/components/layout/PageSection';\n\nconst meta = {\n  title: 'Layout/PageSection',\n  component: PageSection,\n  parameters: {\n    layout: 'fullscreen',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    background: {\n      control: 'select',\n      options: ['white', 'light', 'accent', 'dark'],\n      description: 'Background color of the section'\n    },\n    width: {\n      control: 'select',\n      options: ['narrow', 'wide', 'full'],\n      description: 'Width of the content within the section'\n    },\n    padding: {\n      control: 'select',\n      options: ['small', 'normal', 'large'],\n      description: 'Amount of padding around the content'\n    },\n    centered: {\n      control: 'boolean',\n      description: 'Whether to center the content horizontally'\n    },\n    animate: {\n      control: 'boolean',\n      description: 'Whether to animate the section on scroll'\n    },\n    animationDelay: {\n      control: 'number',\n      description: 'Delay for the animation in ms'\n    }\n  },\n} satisfies Meta<typeof PageSection>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// Example content for demonstration\nconst ExampleContent = () => (\n  <div>\n    <h2 className=\"text-3xl font-bold mb-6\">Section Heading</h2>\n    <p className=\"text-lg mb-8\">\n      This is an example of content that would typically go inside a PageSection component.\n      The PageSection handles the layout, background, and spacing while you focus on the content.\n    </p>\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n      {[1, 2, 3].map((item) => (\n        <div key={item} className=\"border border-gray-200 rounded-lg p-6\">\n          <h3 className=\"text-xl font-semibold mb-3\">Feature {item}</h3>\n          <p>Sample feature description that highlights the value proposition.</p>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport const Default: Story = {\n  args: {\n    background: 'white',\n    width: 'wide',\n    padding: 'normal',\n    centered: false,\n    animate: false,\n    children: <ExampleContent />\n  },\n};\n\nexport const LightBackground: Story = {\n  args: {\n    ...Default.args,\n    background: 'light',\n  },\n};\n\nexport const DarkBackground: Story = {\n  args: {\n    ...Default.args,\n    background: 'dark',\n  },\n};\n\nexport const AccentBackground: Story = {\n  args: {\n    ...Default.args,\n    background: 'accent',\n  },\n};\n\nexport const NarrowWidth: Story = {\n  args: {\n    ...Default.args,\n    width: 'narrow',\n  },\n};\n\nexport const Centered: Story = {\n  args: {\n    ...Default.args,\n    centered: true,\n  },\n};\n\nexport const LargePadding: Story = {\n  args: {\n    ...Default.args,\n    padding: 'large',\n  },\n}; ","\"use client\";\n\nimport React, { ReactNode } from 'react';\nimport { RevealOnScroll } from '@/components/ui';\n\ntype PageSectionProps = {\n  children: ReactNode;\n  className?: string;\n  background?: 'white' | 'light' | 'accent' | 'dark';\n  width?: 'narrow' | 'wide' | 'full';\n  padding?: 'normal' | 'large' | 'small';\n  id?: string;\n  centered?: boolean;\n  animate?: boolean;\n  animationDelay?: number;\n};\n\n/**\n * PageSection - A reusable section component for page layouts\n * \n * Usage example:\n * ```tsx\n * <PageSection background=\"light\" width=\"narrow\" centered>\n *   <h2>Section Title</h2>\n *   <p>Section content goes here</p>\n * </PageSection>\n * ```\n * \n * @param background - Background color: 'white', 'light', 'accent', or 'dark'\n * @param width - Content width: 'narrow' (max-w-4xl), 'wide' (max-w-7xl), or 'full'\n * @param padding - Section padding: 'normal' (default), 'large', or 'small'\n * @param centered - Whether to center the content horizontally\n * @param className - Additional CSS classes\n * @param id - Optional ID for the section (for anchor links)\n * @param animate - Whether to animate the section on scroll\n * @param animationDelay - Delay for the animation in ms\n */\nexport default function PageSection({\n  children,\n  className = '',\n  background = 'white',\n  width = 'wide',\n  padding = 'normal',\n  id,\n  centered = false,\n  animate = false,\n  animationDelay = 100,\n}: PageSectionProps) {\n  // Background color classes\n  const bgClasses = {\n    white: 'bg-white',\n    light: 'bg-background',\n    accent: 'bg-accent/10',\n    dark: 'bg-[#1a2e3b] text-white',\n  };\n\n  // Width classes\n  const widthClasses = {\n    narrow: 'max-w-4xl',\n    wide: 'max-w-7xl',\n    full: 'w-full',\n  };\n\n  // Padding classes\n  const paddingClasses = {\n    small: 'py-8 px-4 md:px-6',\n    normal: 'py-16 px-4 md:px-12',\n    large: 'py-24 px-4 md:px-12',\n  };\n\n  // Text alignment\n  const alignmentClasses = centered ? 'text-center' : '';\n  \n  const sectionContent = (\n    <section \n      id={id} \n      className={`${bgClasses[background]} ${className}`}\n    >\n      <div className={`${widthClasses[width]} mx-auto ${paddingClasses[padding]} ${alignmentClasses}`}>\n        {children}\n      </div>\n    </section>\n  );\n\n  return animate ? (\n    <RevealOnScroll delay={animationDelay}>\n      {sectionContent}\n    </RevealOnScroll>\n  ) : sectionContent;\n} ","\"use client\";\n\nimport React, { ReactNode } from 'react';\n\ntype FeatureCardProps = {\n  title: string;\n  description: string;\n  icon?: ReactNode;\n  iconBgColor?: string;\n  badge?: string;\n  footer?: ReactNode;\n  className?: string;\n  href?: string;\n  featured?: boolean;\n  onClick?: () => void;\n};\n\n/**\n * FeatureCard - A reusable card component for features, use cases, or pricing\n * \n * Usage example:\n * ```tsx\n * <FeatureCard\n *   title=\"Feature Title\"\n *   description=\"Description of the feature or service.\"\n *   icon={<SomeIcon className=\"w-6 h-6\" />}\n *   badge=\"Popular\"\n *   footer={<ButtonPrimary>Learn More</ButtonPrimary>}\n *   featured={true}\n * />\n * ```\n * \n * @param title - Card title\n * @param description - Card description text\n * @param icon - Optional icon component\n * @param iconBgColor - Optional background color for the icon container\n * @param badge - Optional badge text to show in the corner\n * @param footer - Optional footer content (buttons, links, etc.)\n * @param className - Additional CSS classes\n * @param href - Optional link for the entire card\n * @param featured - Whether this is a featured/highlighted card\n * @param onClick - Optional click handler\n */\nexport default function FeatureCard({\n  title,\n  description,\n  icon,\n  iconBgColor = 'bg-accent/10',\n  badge,\n  footer,\n  className = '',\n  href,\n  featured = false,\n  onClick,\n}: FeatureCardProps) {\n  // Base card styles\n  const cardClasses = `\n    card card-hover relative p-6 md:p-8 flex flex-col h-full\n    ${featured ? 'border-accent shadow-md' : 'border-gray-200'}\n    ${className}\n    ${onClick || href ? 'cursor-pointer' : ''}\n  `;\n\n  // Card content\n  const CardContent = () => (\n    <>\n      {/* Badge (if provided) */}\n      {badge && (\n        <div className=\"absolute top-4 right-4\">\n          <span className=\"inline-block bg-accent/20 text-accent text-xs font-medium px-2.5 py-1 rounded\">\n            {badge}\n          </span>\n        </div>\n      )}\n\n      {/* Icon (if provided) */}\n      {icon && (\n        <div className={`w-12 h-12 ${iconBgColor} rounded-full flex items-center justify-center mb-4`}>\n          {icon}\n        </div>\n      )}\n\n      {/* Title and Description */}\n      <h3 className=\"text-xl font-bold mb-3\">{title}</h3>\n      <p className=\"text-gray-700 mb-4 flex-grow\">{description}</p>\n\n      {/* Footer (if provided) */}\n      {footer && <div className=\"mt-auto\">{footer}</div>}\n    </>\n  );\n\n  // If the card is a link, wrap it in an anchor tag\n  if (href) {\n    return (\n      <a href={href} className={cardClasses} onClick={onClick}>\n        <CardContent />\n      </a>\n    );\n  }\n\n  // Otherwise, render as a div\n  return (\n    <div className={cardClasses} onClick={onClick}>\n      <CardContent />\n    </div>\n  );\n} ","\"use client\";\n\nimport React, { useRef, useEffect, useState, ReactNode } from 'react';\n\ninterface RevealOnScrollProps {\n  children: ReactNode;\n  threshold?: number;\n  delay?: number; // delay in ms\n}\n\nconst RevealOnScroll: React.FC<RevealOnScrollProps> = ({\n  children,\n  threshold = 0.1,\n  delay = 100\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n          // Once visible, no need to observe anymore\n          if (ref.current) observer.unobserve(ref.current);\n        }\n      },\n      {\n        threshold,\n        rootMargin: '0px 0px -50px 0px', // Trigger slightly before element is fully in view\n      }\n    );\n\n    const currentRef = ref.current;\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, [threshold]);\n\n  const delayClass = `delay-${delay}`;\n\n  return (\n    <div\n      ref={ref}\n      className={`transition-opacity duration-500 ${delayClass} ${\n        isVisible ? 'opacity-100' : 'opacity-0'\n      }`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default RevealOnScroll; ","\"use client\";\n\nimport React, { ReactNode } from 'react';\nimport Link from 'next/link';\n\ninterface StyledLinkProps {\n  href: string;\n  children: ReactNode;\n  className?: string;\n  variant?: 'default' | 'bold' | 'subtle';\n  underline?: boolean;\n  external?: boolean;\n}\n\n/**\n * StyledLink - A styled link component with animated underline effect\n * \n * @param href - The URL to navigate to\n * @param children - The content of the link\n * @param className - Additional CSS classes\n * @param variant - The style variant: 'default', 'bold', or 'subtle'\n * @param underline - Whether to show the animated underline effect\n * @param external - Whether the link is external (opens in new tab)\n */\nconst StyledLink: React.FC<StyledLinkProps> = ({\n  href,\n  children,\n  className = '',\n  variant = 'default',\n  underline = true,\n  external = false,\n}) => {\n  // Variant styles\n  const variantClasses = {\n    default: 'text-navy hover:text-accent',\n    bold: 'text-navy font-medium hover:text-accent',\n    subtle: 'text-gray-600 hover:text-navy',\n  };\n\n  // External link attributes\n  const externalProps = external ? {\n    target: '_blank',\n    rel: 'noopener noreferrer',\n  } : {};\n\n  return (\n    <Link\n      href={href}\n      className={`inline-flex items-center ${variantClasses[variant]} hover:no-underline ${className}`}\n      {...externalProps}\n    >\n      <span className=\"relative inline-flex overflow-hidden group\">\n        <span className=\"relative z-10\">{children}</span>\n        {underline && (\n          <span \n            className=\"absolute left-0 bottom-0 h-[2px] w-0 bg-accent transition-all duration-300 group-hover:w-full\"\n            aria-hidden=\"true\"\n          />\n        )}\n      </span>\n    </Link>\n  );\n};\n\nexport default StyledLink; ","/**\n * UI Component Library - Index file\n * \n * This file exports all reusable UI components for easier imports.\n * Import components like:\n *\n * ```tsx\n * import { ButtonPrimary, FeatureCard } from \"@/components/ui\";\n * ```\n */\n\nexport { default as FeatureCard } from './FeatureCard';\nexport { ButtonPrimary, ButtonSecondary, ButtonAccent } from './Button'; \nexport { default as RevealOnScroll } from './RevealOnScroll';\nexport { default as StyledLink } from './StyledLink'; "],"names":[],"sourceRoot":""}