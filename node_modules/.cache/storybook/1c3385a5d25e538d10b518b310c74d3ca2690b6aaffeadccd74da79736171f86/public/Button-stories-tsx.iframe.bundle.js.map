{"version":3,"file":"Button-stories-tsx.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;AAGA;AACA","sources":["webpack://business-website/./stories/Button.stories.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\nimport { ButtonPrimary, ButtonSecondary, ButtonAccent } from '@/components/ui/Button';\n\nconst meta = {\n  title: 'UI/Button',\n  component: ButtonPrimary,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    size: { \n      control: 'select', \n      options: ['sm', 'md', 'lg'],\n      description: 'The size of the button'\n    },\n    fullWidth: { \n      control: 'boolean',\n      description: 'Whether the button should take up the full width of its container' \n    },\n    disabled: { \n      control: 'boolean',\n      description: 'Whether the button is disabled' \n    },\n    isLoading: { \n      control: 'boolean',\n      description: 'Whether to show a loading spinner' \n    },\n    children: { \n      control: 'text',\n      description: 'The content of the button' \n    },\n  },\n} satisfies Meta<typeof ButtonPrimary>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Primary: Story = {\n  args: {\n    children: 'Primary Button',\n    size: 'md',\n    disabled: false,\n    isLoading: false,\n    fullWidth: false,\n  },\n};\n\nexport const Secondary: Story = {\n  args: {\n    ...Primary.args,\n    children: 'Secondary Button',\n  },\n  render: (args) => <ButtonSecondary {...args} />,\n};\n\nexport const Accent: Story = {\n  args: {\n    ...Primary.args,\n    children: 'Accent Button',\n  },\n  render: (args) => <ButtonAccent {...args} />,\n};\n\nexport const Small: Story = {\n  args: {\n    ...Primary.args,\n    size: 'sm',\n  },\n};\n\nexport const Large: Story = {\n  args: {\n    ...Primary.args,\n    size: 'lg',\n  },\n};\n\nexport const Loading: Story = {\n  args: {\n    ...Primary.args,\n    isLoading: true,\n  },\n};\n\nexport const Disabled: Story = {\n  args: {\n    ...Primary.args,\n    disabled: true,\n  },\n};\n\nexport const FullWidth: Story = {\n  args: {\n    ...Primary.args,\n    fullWidth: true,\n  },\n};\n\nexport const WithIcon: Story = {\n  args: {\n    ...Primary.args,\n    icon: (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clipRule=\"evenodd\" />\n      </svg>\n    ),\n  },\n}; "],"names":[],"sourceRoot":""}