{"version":3,"file":"FeatureCard-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;AAFA;AAMA;AACA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;;AAEA;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AAaA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAGA;AACA;AACA;AAAA;AACA;;;;;;;;;;;AAMA;AACA;AACA;;;;;;AAKA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;AAGA;AAEA;AACA;AACA;AAAA;AACA;;;;;;;;;;AAGA;AA/DA;AA+DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://business-website/./stories/FeatureCard.stories.tsx","webpack://business-website/./components/ui/FeatureCard.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\nimport FeatureCard from '@/components/ui/FeatureCard';\nimport { ButtonPrimary } from '@/components/ui/Button';\n\nconst meta = {\n  title: 'UI/FeatureCard',\n  component: FeatureCard,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    title: {\n      control: 'text',\n      description: 'Card title'\n    },\n    description: {\n      control: 'text',\n      description: 'Card description'\n    },\n    badge: {\n      control: 'text',\n      description: 'Optional badge text to show in the corner'\n    },\n    featured: {\n      control: 'boolean',\n      description: 'Whether this is a featured/highlighted card'\n    },\n    href: {\n      control: 'text',\n      description: 'Optional link for the entire card'\n    },\n    iconBgColor: {\n      control: 'color',\n      description: 'Background color for the icon container'\n    }\n  },\n} satisfies Meta<typeof FeatureCard>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// Icon for examples\nconst ExampleIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n  </svg>\n);\n\nexport const Default: Story = {\n  args: {\n    title: 'Feature Title',\n    description: 'This is a brief description of the feature or service being offered. It explains the value proposition in a concise way.',\n    icon: <ExampleIcon />,\n    iconBgColor: 'bg-accent/10',\n  },\n};\n\nexport const WithBadge: Story = {\n  args: {\n    ...Default.args,\n    badge: 'Popular',\n  },\n};\n\nexport const Featured: Story = {\n  args: {\n    ...Default.args,\n    featured: true,\n  },\n};\n\nexport const WithFooter: Story = {\n  args: {\n    ...Default.args,\n    footer: <ButtonPrimary size=\"sm\">Learn More</ButtonPrimary>,\n  },\n};\n\nexport const AsLink: Story = {\n  args: {\n    ...Default.args,\n    href: '#',\n  },\n};\n\nexport const NoIcon: Story = {\n  args: {\n    title: 'No Icon Card',\n    description: 'This card doesn\\'t have an icon, showing how the component looks without one.',\n  },\n}; ","\"use client\";\n\nimport React, { ReactNode } from 'react';\n\ntype FeatureCardProps = {\n  title: string;\n  description: string;\n  icon?: ReactNode;\n  iconBgColor?: string;\n  badge?: string;\n  footer?: ReactNode;\n  className?: string;\n  href?: string;\n  featured?: boolean;\n  onClick?: () => void;\n};\n\n/**\n * FeatureCard - A reusable card component for features, use cases, or pricing\n * \n * Usage example:\n * ```tsx\n * <FeatureCard\n *   title=\"Feature Title\"\n *   description=\"Description of the feature or service.\"\n *   icon={<SomeIcon className=\"w-6 h-6\" />}\n *   badge=\"Popular\"\n *   footer={<ButtonPrimary>Learn More</ButtonPrimary>}\n *   featured={true}\n * />\n * ```\n * \n * @param title - Card title\n * @param description - Card description text\n * @param icon - Optional icon component\n * @param iconBgColor - Optional background color for the icon container\n * @param badge - Optional badge text to show in the corner\n * @param footer - Optional footer content (buttons, links, etc.)\n * @param className - Additional CSS classes\n * @param href - Optional link for the entire card\n * @param featured - Whether this is a featured/highlighted card\n * @param onClick - Optional click handler\n */\nexport default function FeatureCard({\n  title,\n  description,\n  icon,\n  iconBgColor = 'bg-accent/10',\n  badge,\n  footer,\n  className = '',\n  href,\n  featured = false,\n  onClick,\n}: FeatureCardProps) {\n  // Base card styles\n  const cardClasses = `\n    card card-hover relative p-6 md:p-8 flex flex-col h-full\n    ${featured ? 'border-accent shadow-md' : 'border-gray-200'}\n    ${className}\n    ${onClick || href ? 'cursor-pointer' : ''}\n  `;\n\n  // Card content\n  const CardContent = () => (\n    <>\n      {/* Badge (if provided) */}\n      {badge && (\n        <div className=\"absolute top-4 right-4\">\n          <span className=\"inline-block bg-accent/20 text-accent text-xs font-medium px-2.5 py-1 rounded\">\n            {badge}\n          </span>\n        </div>\n      )}\n\n      {/* Icon (if provided) */}\n      {icon && (\n        <div className={`w-12 h-12 ${iconBgColor} rounded-full flex items-center justify-center mb-4`}>\n          {icon}\n        </div>\n      )}\n\n      {/* Title and Description */}\n      <h3 className=\"text-xl font-bold mb-3\">{title}</h3>\n      <p className=\"text-gray-700 mb-4 flex-grow\">{description}</p>\n\n      {/* Footer (if provided) */}\n      {footer && <div className=\"mt-auto\">{footer}</div>}\n    </>\n  );\n\n  // If the card is a link, wrap it in an anchor tag\n  if (href) {\n    return (\n      <a href={href} className={cardClasses} onClick={onClick}>\n        <CardContent />\n      </a>\n    );\n  }\n\n  // Otherwise, render as a div\n  return (\n    <div className={cardClasses} onClick={onClick}>\n      <CardContent />\n    </div>\n  );\n} "],"names":[],"sourceRoot":""}