{"version":3,"file":"components_ui_Button_tsx.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AAeA;;;AAGA;AAcA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAIA;AACA;;AAEA;;;;;AACA;AACA;AACA;;;;;;AAGA;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAGA;AAvFA;AAyFA;;;;;;;;;AASA;AAEA;AAEA;AACA;;AAEA;;;;;;AAGA;AATA;AAWA;;;;;;;;AAQA;AAEA;AAEA;AACA;;AAEA;;;;;;AAGA;AATA;AAWA;;;;;;;;AAQA;AAEA;AAEA;AACA;;AAEA;;;;;;AAGA;AATA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://business-website/./components/ui/Button.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { ReactNode } from 'react';\nimport Link from 'next/link';\n\ntype ButtonProps = {\n  children: ReactNode;\n  className?: string;\n  href?: string;\n  type?: 'button' | 'submit' | 'reset';\n  size?: 'sm' | 'md' | 'lg';\n  fullWidth?: boolean;\n  onClick?: () => void;\n  disabled?: boolean;\n  icon?: ReactNode;\n  isLoading?: boolean;\n};\n\n/**\n * Button base component with shared functionality\n * Not intended for direct use - use ButtonPrimary or ButtonSecondary instead\n */\nconst Button = ({\n  children,\n  className = '',\n  href,\n  type = 'button',\n  size = 'md',\n  fullWidth = false,\n  onClick,\n  disabled = false,\n  icon,\n  isLoading = false,\n  ...props\n}: ButtonProps & { [key: string]: any }) => {\n  // Size classes\n  const sizeClasses = {\n    sm: 'px-4 py-2 text-sm',\n    md: 'px-6 py-3 text-base',\n    lg: 'px-8 py-4 text-lg',\n  };\n\n  // Width class\n  const widthClass = fullWidth ? 'w-full' : '';\n  \n  // Loading and disabled states\n  const isDisabled = disabled || isLoading;\n  \n  // Size-specific classes for icons\n  const iconSizeClasses = {\n    sm: 'h-4 w-4',\n    md: 'h-5 w-5',\n    lg: 'h-6 w-6',\n  };\n\n  // Common classes for all button types\n  const baseClasses = `\n    inline-flex items-center justify-center font-medium rounded-lg\n    transition-all duration-200 ease-in-out ${sizeClasses[size]} ${widthClass}\n    ${isDisabled ? 'opacity-60 cursor-not-allowed' : ''}\n    ${className}\n  `;\n\n  // Loading indicator\n  const LoadingSpinner = () => (\n    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n    </svg>\n  );\n\n  // Content with icon and/or loading spinner\n  const content = (\n    <>\n      {isLoading && <LoadingSpinner />}\n      {icon && !isLoading && (\n        <span className={`mr-2 flex items-center justify-center ${iconSizeClasses[size]}`}>\n          {icon}\n        </span>\n      )}\n      {children}\n    </>\n  );\n\n  // Render as link or button\n  if (href) {\n    return (\n      <Link\n        href={href}\n        className={baseClasses}\n        onClick={isDisabled ? (e) => e.preventDefault() : onClick}\n        {...props}\n      >\n        {content}\n      </Link>\n    );\n  }\n\n  return (\n    <button\n      type={type}\n      className={baseClasses}\n      onClick={onClick}\n      disabled={isDisabled}\n      {...props}\n    >\n      {content}\n    </button>\n  );\n};\n\n/**\n * ButtonPrimary - Primary action button with dark background and white text\n * \n * Usage example:\n * ```tsx\n * <ButtonPrimary href=\"/contact\">Contact Us</ButtonPrimary>\n * <ButtonPrimary onClick={handleAction} size=\"lg\">Get Started</ButtonPrimary>\n * <ButtonPrimary isLoading>Processing...</ButtonPrimary>\n * ```\n */\nexport function ButtonPrimary(props: ButtonProps) {\n  return (\n    <Button\n      {...props}\n      className={`bg-[#1a2e3b] text-white hover:opacity-90 hover:shadow-lg hover:brightness-105 \n      hover:-translate-y-0.5 active:opacity-90 active:shadow-sm active:translate-y-0.5\n      focus:ring-2 focus:ring-accent focus:outline-none shadow-sm ${props.className || ''}`}\n    />\n  );\n}\n\n/**\n * ButtonSecondary - Secondary button with transparent background and border\n * \n * Usage example:\n * ```tsx\n * <ButtonSecondary href=\"/learn-more\">Learn More</ButtonSecondary>\n * <ButtonSecondary onClick={handleAction}>View Details</ButtonSecondary>\n * ```\n */\nexport function ButtonSecondary(props: ButtonProps) {\n  return (\n    <Button\n      {...props}\n      className={`border border-[#1a2e3b] text-[#1a2e3b] bg-white hover:bg-gray-100 \n      hover:shadow-md hover:-translate-y-0.5 active:opacity-90 active:shadow-sm active:translate-y-0.5\n      focus:ring-2 focus:ring-accent focus:outline-none ${props.className || ''}`}\n    />\n  );\n}\n\n/**\n * ButtonAccent - Accent button with the brand's accent color (green)\n * \n * Usage example:\n * ```tsx\n * <ButtonAccent href=\"/signup\">Sign Up</ButtonAccent>\n * <ButtonAccent onClick={handleAction}>Start Free Trial</ButtonAccent>\n * ```\n */\nexport function ButtonAccent(props: ButtonProps) {\n  return (\n    <Button\n      {...props}\n      className={`bg-accent text-white hover:bg-accent-dark hover:shadow-lg hover:brightness-105 \n      hover:-translate-y-0.5 active:opacity-90 active:shadow-sm active:translate-y-0.5\n      focus:ring-2 focus:ring-accent focus:outline-none shadow-sm ${props.className || ''}`}\n    />\n  );\n} "],"names":[],"sourceRoot":""}