"use strict";
(self["webpackChunkbusiness_website"] = self["webpackChunkbusiness_website"] || []).push([["FeatureCard-stories"],{

/***/ "./stories/FeatureCard.stories.tsx":
/*!*****************************************!*\
  !*** ./stories/FeatureCard.stories.tsx ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsLink: () => (/* binding */ AsLink),
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   Featured: () => (/* binding */ Featured),
/* harmony export */   NoIcon: () => (/* binding */ NoIcon),
/* harmony export */   WithBadge: () => (/* binding */ WithBadge),
/* harmony export */   WithFooter: () => (/* binding */ WithFooter),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/next/dist/compiled/react/jsx-dev-runtime.js");
/* harmony import */ var _components_ui_FeatureCard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/ui/FeatureCard */ "./components/ui/FeatureCard.tsx");
/* harmony import */ var _components_ui_Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/Button */ "./components/ui/Button.tsx");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");




const meta = {
  title: "UI/FeatureCard",
  component: _components_ui_FeatureCard__WEBPACK_IMPORTED_MODULE_1__["default"],
  parameters: {
    layout: "centered"
  },
  tags: ["autodocs"],
  argTypes: {
    title: {
      control: "text",
      description: "Card title"
    },
    description: {
      control: "text",
      description: "Card description"
    },
    badge: {
      control: "text",
      description: "Optional badge text to show in the corner"
    },
    featured: {
      control: "boolean",
      description: "Whether this is a featured/highlighted card"
    },
    href: {
      control: "text",
      description: "Optional link for the entire card"
    },
    iconBgColor: {
      control: "color",
      description: "Background color for the icon container"
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// Icon for examples
const ExampleIcon = () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  className: "h-6 w-6 text-accent",
  fill: "none",
  viewBox: "0 0 24 24",
  stroke: "currentColor",
  children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 2,
    d: "M13 10V3L4 14h7v7l9-11h-7z"
  }, void 0, false, {
    fileName: "/Users/kylelarsen/Documents/Notation Website/stories/FeatureCard.stories.tsx",
    lineNumber: 46,
    columnNumber: 5
  }, undefined)
}, void 0, false, {
  fileName: "/Users/kylelarsen/Documents/Notation Website/stories/FeatureCard.stories.tsx",
  lineNumber: 45,
  columnNumber: 3
}, undefined);
_c = ExampleIcon;
const Default = {
  args: {
    title: "Feature Title",
    description: "This is a brief description of the feature or service being offered. It explains the value proposition in a concise way.",
    icon: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ExampleIcon, {}, void 0, false, {
      fileName: "/Users/kylelarsen/Documents/Notation Website/stories/FeatureCard.stories.tsx",
      lineNumber: 54,
      columnNumber: 11
    }, undefined),
    iconBgColor: "bg-accent/10"
  }
};
const WithBadge = {
  args: {
    ...Default.args,
    badge: "Popular"
  }
};
const Featured = {
  args: {
    ...Default.args,
    featured: true
  }
};
const WithFooter = {
  args: {
    ...Default.args,
    footer: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_Button__WEBPACK_IMPORTED_MODULE_2__.ButtonPrimary, {
      size: "sm",
      children: "Learn More"
    }, void 0, false, {
      fileName: "/Users/kylelarsen/Documents/Notation Website/stories/FeatureCard.stories.tsx",
      lineNumber: 76,
      columnNumber: 13
    }, undefined)
  }
};
const AsLink = {
  args: {
    ...Default.args,
    href: "#"
  }
};
const NoIcon = {
  args: {
    title: "No Icon Card",
    description: "This card doesn't have an icon, showing how the component looks without one."
  }
};
var _c;
__webpack_require__.$Refresh$.register(_c, "ExampleIcon");
;
const __namedExportsOrder = ["Default", "WithBadge", "Featured", "WithFooter", "AsLink", "NoIcon"];
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    title: 'Feature Title',\n    description: 'This is a brief description of the feature or service being offered. It explains the value proposition in a concise way.',\n    icon: <ExampleIcon />,\n    iconBgColor: 'bg-accent/10'\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
WithBadge.parameters = {
  ...WithBadge.parameters,
  docs: {
    ...WithBadge.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Default.args,\n    badge: 'Popular'\n  }\n}",
      ...WithBadge.parameters?.docs?.source
    }
  }
};
Featured.parameters = {
  ...Featured.parameters,
  docs: {
    ...Featured.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Default.args,\n    featured: true\n  }\n}",
      ...Featured.parameters?.docs?.source
    }
  }
};
WithFooter.parameters = {
  ...WithFooter.parameters,
  docs: {
    ...WithFooter.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Default.args,\n    footer: <ButtonPrimary size=\"sm\">Learn More</ButtonPrimary>\n  }\n}",
      ...WithFooter.parameters?.docs?.source
    }
  }
};
AsLink.parameters = {
  ...AsLink.parameters,
  docs: {
    ...AsLink.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    ...Default.args,\n    href: '#'\n  }\n}",
      ...AsLink.parameters?.docs?.source
    }
  }
};
NoIcon.parameters = {
  ...NoIcon.parameters,
  docs: {
    ...NoIcon.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    title: 'No Icon Card',\n    description: 'This card doesn\\'t have an icon, showing how the component looks without one.'\n  }\n}",
      ...NoIcon.parameters?.docs?.source
    }
  }
};

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./components/ui/FeatureCard.tsx":
/*!***************************************!*\
  !*** ./components/ui/FeatureCard.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FeatureCard)
/* harmony export */ });
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/next/dist/compiled/react/jsx-dev-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/next/dist/compiled/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

"use client";


/**
 * FeatureCard - A reusable card component for features, use cases, or pricing
 * 
 * Usage example:
 * ```tsx
 * <FeatureCard
 *   title="Feature Title"
 *   description="Description of the feature or service."
 *   icon={<SomeIcon className="w-6 h-6" />}
 *   badge="Popular"
 *   footer={<ButtonPrimary>Learn More</ButtonPrimary>}
 *   featured={true}
 * />
 * ```
 * 
 * @param title - Card title
 * @param description - Card description text
 * @param icon - Optional icon component
 * @param iconBgColor - Optional background color for the icon container
 * @param badge - Optional badge text to show in the corner
 * @param footer - Optional footer content (buttons, links, etc.)
 * @param className - Additional CSS classes
 * @param href - Optional link for the entire card
 * @param featured - Whether this is a featured/highlighted card
 * @param onClick - Optional click handler
 */ function FeatureCard({ title, description, icon, iconBgColor = "bg-accent/10", badge, footer, className = "", href, featured = false, onClick }) {
    // Base card styles
    const cardClasses = `
    card card-hover relative p-6 md:p-8 flex flex-col h-full
    ${featured ? "border-accent shadow-md" : "border-gray-200"}
    ${className}
    ${onClick || href ? "cursor-pointer" : ""}
  `;
    // Card content
    const CardContent = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
            children: [
                badge && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "absolute top-4 right-4",
                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("span", {
                        className: "inline-block bg-accent/20 text-accent text-xs font-medium px-2.5 py-1 rounded",
                        children: badge
                    }, void 0, false, {
                        fileName: "/Users/kylelarsen/Documents/Notation Website/components/ui/FeatureCard.tsx",
                        lineNumber: 70,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "/Users/kylelarsen/Documents/Notation Website/components/ui/FeatureCard.tsx",
                    lineNumber: 69,
                    columnNumber: 9
                }, this),
                icon && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: `w-12 h-12 ${iconBgColor} rounded-full flex items-center justify-center mb-4`,
                    children: icon
                }, void 0, false, {
                    fileName: "/Users/kylelarsen/Documents/Notation Website/components/ui/FeatureCard.tsx",
                    lineNumber: 78,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("h3", {
                    className: "text-xl font-bold mb-3",
                    children: title
                }, void 0, false, {
                    fileName: "/Users/kylelarsen/Documents/Notation Website/components/ui/FeatureCard.tsx",
                    lineNumber: 84,
                    columnNumber: 7
                }, this),
                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("p", {
                    className: "text-gray-700 mb-4 flex-grow",
                    children: description
                }, void 0, false, {
                    fileName: "/Users/kylelarsen/Documents/Notation Website/components/ui/FeatureCard.tsx",
                    lineNumber: 85,
                    columnNumber: 7
                }, this),
                footer && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "mt-auto",
                    children: footer
                }, void 0, false, {
                    fileName: "/Users/kylelarsen/Documents/Notation Website/components/ui/FeatureCard.tsx",
                    lineNumber: 88,
                    columnNumber: 18
                }, this)
            ]
        }, void 0, true);
    // If the card is a link, wrap it in an anchor tag
    if (href) {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("a", {
            href: href,
            className: cardClasses,
            onClick: onClick,
            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CardContent, {}, void 0, false, {
                fileName: "/Users/kylelarsen/Documents/Notation Website/components/ui/FeatureCard.tsx",
                lineNumber: 96,
                columnNumber: 9
            }, this)
        }, void 0, false, {
            fileName: "/Users/kylelarsen/Documents/Notation Website/components/ui/FeatureCard.tsx",
            lineNumber: 95,
            columnNumber: 7
        }, this);
    }
    // Otherwise, render as a div
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
        className: cardClasses,
        onClick: onClick,
        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CardContent, {}, void 0, false, {
            fileName: "/Users/kylelarsen/Documents/Notation Website/components/ui/FeatureCard.tsx",
            lineNumber: 104,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "/Users/kylelarsen/Documents/Notation Website/components/ui/FeatureCard.tsx",
        lineNumber: 103,
        columnNumber: 5
    }, this);
}
_c = FeatureCard;
FeatureCard.__docgenInfo = {
    "description": 'FeatureCard - A reusable card component for features, use cases, or pricing\n\nUsage example:\n```tsx\n<FeatureCard\n  title="Feature Title"\n  description="Description of the feature or service."\n  icon={<SomeIcon className="w-6 h-6" />}\n  badge="Popular"\n  footer={<ButtonPrimary>Learn More</ButtonPrimary>}\n  featured={true}\n/>\n```\n\n@param title - Card title\n@param description - Card description text\n@param icon - Optional icon component\n@param iconBgColor - Optional background color for the icon container\n@param badge - Optional badge text to show in the corner\n@param footer - Optional footer content (buttons, links, etc.)\n@param className - Additional CSS classes\n@param href - Optional link for the entire card\n@param featured - Whether this is a featured/highlighted card\n@param onClick - Optional click handler',
    "methods": [],
    "displayName": "FeatureCard",
    "props": {
        "title": {
            "required": true,
            "tsType": {
                "name": "string"
            },
            "description": ""
        },
        "description": {
            "required": true,
            "tsType": {
                "name": "string"
            },
            "description": ""
        },
        "icon": {
            "required": false,
            "tsType": {
                "name": "ReactNode"
            },
            "description": ""
        },
        "iconBgColor": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": "",
            "defaultValue": {
                "value": "'bg-accent/10'",
                "computed": false
            }
        },
        "badge": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": ""
        },
        "footer": {
            "required": false,
            "tsType": {
                "name": "ReactNode"
            },
            "description": ""
        },
        "className": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": "",
            "defaultValue": {
                "value": "''",
                "computed": false
            }
        },
        "href": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": ""
        },
        "featured": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": "",
            "defaultValue": {
                "value": "false",
                "computed": false
            }
        },
        "onClick": {
            "required": false,
            "tsType": {
                "name": "signature",
                "type": "function",
                "raw": "() => void",
                "signature": {
                    "arguments": [],
                    "return": {
                        "name": "void"
                    }
                }
            },
            "description": ""
        }
    }
};
var _c;
__webpack_require__.$Refresh$.register(_c, "FeatureCard");


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

}]);
//# sourceMappingURL=FeatureCard-stories.iframe.bundle.js.map